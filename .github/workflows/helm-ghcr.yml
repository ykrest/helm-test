name: Helm to GHCR

on:
  push:
    branches: [ 'master', 'main' ]
  workflow_dispatch:
      inputs:
        charts-path:
          required: true
          type: string
        version:
          required: true
          type: string

permissions:
  contents: read
  packages: write

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Helm charts matrix
        id: set-matrix
        run: |
          CHARTS_PATHS=$(find ${{ inputs.charts-path }} -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          echo "Matrix: $CHARTS_PATHS"
          echo "matrix=$CHARTS_PATHS" >> $GITHUB_OUTPUT

  build:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
          chart: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Set Helm Chart version
        run: | 
          echo "Setting Helm Chart version to ${{ inputs.version }}"
          sed -i 's/version: [0-9]\+\.[0-9]\+\.[0-9]\+/version: ${{ inputs.version }}/g' "Chart.yaml"
          cat Chart.yaml
        working-directory: ${{ inputs.charts-path }}/${{ matrix.chart }}

      - name: Helm lint
        run: helm lint
        working-directory: ${{ inputs.charts-path }}/${{ matrix.chart }}
      
      - name: Helm Template
        run: |
          helm template .
        working-directory: ${{ inputs.charts-path }}/${{ matrix.chart }}
       
      - name: Package Helm chart
        run: helm package . --destination .
        working-directory: ${{ inputs.charts-path }}/${{ matrix.chart }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.chart }}-chart
          path: ${{ inputs.charts-path }}/${{ matrix.chart }}/*.tgz
  
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:  [prepare-matrix, build]
    strategy:
        fail-fast: false
        matrix:
          chart: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.chart }}-chart
          path: .output_chart

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
                    
      - name: Push charts to GHCR
        run: |
          owner="${GITHUB_REPOSITORY_OWNER,,}"
          shopt -s nullglob
          files=$(find .output_chart/ -type f -name "*.tgz")
          for pkg in $files; do
            echo "Pushing ${pkg} to ghcr.io/$owner"
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" "oci://ghcr.io/$owner"
          done